- name: Gather information about the host
  hosts: all
  tags:
    - facts
  tasks:
    - name: Classify the host based on its OS distribution
      ansible.builtin.group_by:
        key: "dyn_os_{{ ansible_distribution | lower }}"
      changed_when: false

    - name: Classify the host based on its system vendor
      ansible.builtin.group_by:
        key: "dyn_sys_{{ ansible_system_vendor | lower | regex_replace('\\W', ' ') | split(' ') | first }}"
      changed_when: false

    - name: Classify the host based on whether we're running Ansible inside a chroot
      ansible.builtin.group_by:
        key: "dyn_stage_{{ 'bootstrap' if ansible_is_chroot | default(false) | bool else 'live' }}"
      changed_when: false

    - name: Show host distribution, release name, and version
      vars:
        msg: |
          Hardware Vendor: {{ ansible_system_vendor }}, {{ ansible_product_name }}, {{ ansible_product_version }}
          Arch: ansible_architecture={{ ansible_architecture }}, ansible_machine={{ ansible_machine }}
          OS Fam.: {{ ansible_os_family }}, {{ ansible_system }}
          OS Dist.: {{ ansible_distribution }}, {{ ansible_distribution_release }}, {{ ansible_distribution_version }}
          Hostnames: ansible_host={{ ansible_host }}, ansible_hostname={{ ansible_hostname }}, ansible_fqdn={{ ansible_fqdn }}, ansible_nodename={{ ansible_nodename }}
          Ansible Inventory: {{ inventory_hostname }}, {{ inventory_hostname_short }}
          Ansible Groups: {{ group_names }}
      ansible.builtin.debug:
        msg: "{{ msg.split('\n') }}"

- name: Perform setup tasks for bootstrapping hosts
  hosts: dyn_stage_bootstrap
  tags:
    - dyn_stage_bootstrap
  become: true
  tasks:
    - name: Find all APT repo files
      ansible.builtin.find:
        paths:
          - /etc/apt/sources.list.d
        file_type: file
        recurse: true
      register: apt_repository_sources

    - name: Comment out any cdrom APT repositories
      ansible.builtin.lineinfile:
        path: "{{ item }}"
        line: '#\1'
        regexp: '^(deb cdrom:.*)$'
        backrefs: true
      loop: "{{ ['/etc/apt/sources.list', apt_repository_sources.files | map(attribute='path')] | flatten }}"

- name: Perform OS hardening tasks
  hosts: harden
  tags:
    - harden
  become: true
  tasks:
    - name: Apply dev-sec OS hardening
      block:
        - name: Include the OS hardening role
          ansible.builtin.include_role:
            name: devsec.hardening.os_hardening
        - name: Flush handlers
          ansible.builtin.meta: flush_handlers
      rescue:
        - name: Recover errors in OS hardening
          vars:
            msg: |
              "ansible_failed_task={{ ansible_failed_task | default({}) }}"
              "ansible_failed_result={{ ansible_failed_result | default({}) }}"
          ansible.builtin.debug:
            msg: "{{ msg.split('\n') }}"

    - name: Apply dev-sec SSH hardening
      vars:
        ssh_allow_users: "{{ nausicaea_common_secrets.admin_user }}"
      ansible.builtin.import_role:
        name: devsec.hardening.ssh_hardening

    - name: Run the common role once at the beginning to make sure Ansible is set up right
      ansible.builtin.import_role:
        name: nausicaea.common

- name: Perform tasks specific to Apple hardware 
  hosts: dyn_sys_apple
  tags:
    - dyn_sys_apple
  roles:
    - nausicaea.mbpfan

- name: Provision Tailscale
  hosts: tailscale
  tags:
    - tailscale
  roles:
    - nausicaea.tailscale
 
