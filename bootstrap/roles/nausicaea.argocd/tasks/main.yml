---
- name: Install the Kubernetes helper package
  ansible.builtin.package:
    name: python3-kubernetes
    state: present
  become: true

- name: Deploy the Bitnami ArgoCD Helm chart
  kubernetes.core.k8s:
    kubeconfig: "{{ nausicaea.common.ansible_home }}/.kube/config"
    resource_definition:
      apiVersion: helm.cattle.io/v1
      kind: HelmChart
      metadata:
        name: argocd
        namespace: kube-system
      spec:
        chart: oci://ghcr.io/argoproj/argo-helm/argo-cd
        version: 8.2.5
        targetNamespace: argocd
        createNamespace: true
        valuesContent: |-
          global:
            domain: argocd.takaya-map.ts.net
          configs:
            params:
              server.insecure: true
          server:
            autoscaling:
              enabled: true
              minReplicas: 2
            ingress: 
              enabled: true
              annotations:
                tailscale.com/tags: "tag:argocd,tag:k8s"
              ingressClassName: tailscale
              hostname: argocd
              extraTls:
                - hosts:
                    - argocd
                    - argocd.takaya-map.ts.net
          repoServer:
            autoscaling:
              enabled: true
              minReplicas: 2
          redis-ha:
            enabled: true
          controller:
            replicas: 1
          applicationSet:
            replicas: 2

- name: Wait for ArgoCD to be ready
  kubernetes.core.k8s_info:
    kubeconfig: "{{ nausicaea.common.ansible_home }}/.kube/config"
    namespace: argocd
    kind: Deployment
    label_selectors:
      - app.kubernetes.io/component=server
      - app.kubernetes.io/instance=argocd
    wait: true
    wait_sleep: 10
    wait_timeout: 360

- name: Define the Nippon-Koku repository
  kubernetes.core.k8s:
    kubeconfig: "{{ nausicaea.common.ansible_home }}/.kube/config"
    state: present
    resource_definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: "{{ nausicaea.common.project_name }}"
        namespace: argocd
        labels:
          argocd.argoproj.io/secret-type: repository
      stringData:
        url: "{{ nausicaea.common.repo }}"
        project: "{{ nausicaea.common.project_name }}"

- name: Define the governance policy for the cluster bootstrap application
  kubernetes.core.k8s:
    kubeconfig: "{{ nausicaea.common.ansible_home }}/.kube/config"
    state: present
    resource_definition:
      apiVersion: argoproj.io/v1alpha1
      kind: AppProject
      metadata:
        name: "appproj-{{ nausicaea.common.project_name }}"
        namespace: argocd
        finalizers:
          - resources-finalizer.argocd.argoproj.io
      spec:
        sourceRepos:
          - "{{ nausicaea.common.repo }}"
          - https://bitnami-labs.github.io/sealed-secrets
          - https://pkgs.tailscale.com/helmcharts
          - https://charts.longhorn.io
          - https://kubetail-org.github.io/helm-charts
          - https://grafana.github.io/helm-charts
          - https://open-telemetry.github.io/opentelemetry-helm-charts
          - https://charts.jetstack.io
          - https://victoriametrics.github.io/helm-charts
          - https://kubescape.github.io/helm-charts/
        destinations:
          - server: https://kubernetes.default.svc
            namespace: "*"
          - server: https://kubernetes.default.svc
            namespace: ""
        clusterResourceWhitelist:
          - group: "*"
            kind: "*"

- name: Define the cluster bootstrap application
  kubernetes.core.k8s:
    kubeconfig: "{{ nausicaea.common.ansible_home }}/.kube/config"
    state: present
    resource_definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: "app-{{ nausicaea.common.project_name }}"
        namespace: argocd
        finalizers:
          - resources-finalizer.argocd.argoproj.io
        annotations:
          argocd.argoproj.io/sync-wave: "1"
      spec:
        project: "appproj-{{ nausicaea.common.project_name }}"
        source:
          repoURL: "{{ nausicaea.common.repo }}"
          targetRevision: "{{ nausicaea.common.branch }}"
          path: applications
          directory:
            jsonnet:
              tlas:
                - name: source_repo
                  value: "{{ nausicaea.common.repo }}"
                - name: source_target_revision
                  value: "{{ nausicaea.common.branch }}"
        destination:
          server: https://kubernetes.default.svc
        syncPolicy:
          automated: {}
