---
- name: Configure firewalld
  ansible.builtin.import_tasks:
    file: configure_firewalld.yml

- name: Download the K3s installer script
  ansible.builtin.get_url:
    url: https://get.k3s.io
    checksum: sha256:9d5fc42bf825d3e8dcc8682c8bac071b1de18019af81f85519ccbe5c919e0896
    dest: /usr/local/sbin/k3s-install
    owner: root
    group: root
    mode: "0500"
  become: true

- name: Determine the TLS SAN values
  ansible.builtin.set_fact:
    k3s_tls_san: "{{ [tailscale_host_fqdn, tailscale_ips] | flatten | join(',') }}"
    k3s_advertise_address_ipv4: "{{ tailscale_ips | ipv4 | first }}"

- name: Provision the cluster-init node
  when: nausicaea.k3s.args.cluster_init
  block:
    - name: Create the TLS directory
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server/tls
        state: directory
        recurse: true
        owner: root
        group: root
        mode: "u=rwX,go="
      become: true

    - name: Extract the custom TLS certificates
      ansible.builtin.unarchive:
        src: k3s-server-tls.tgz
        dest: /var/lib/rancher/k3s/server/tls
        creates: /var/lib/rancher/k3s/server/tls/root-ca.crt
        owner: root
        group: root
        mode: "u=rwX,go="
      become: true

    - name: Copy the K3s token file
      ansible.builtin.copy:
        src: k3s-token
        dest: /var/lib/rancher/k3s/server/token
        owner: root
        group: root
        mode: "0600"
      become: true

    - name: Run the K3s installer with cluster-init for a server (control pane)
      ansible.builtin.command:
        argv:
          - /usr/local/sbin/k3s-install
          - server
          - "--cluster-init"
          - "--token-file"
          - "/var/lib/rancher/k3s/server/token"
          - "--tls-san"
          - "{{ k3s_tls_san }}"
          - "--advertise-address"
          - "{{ k3s_advertise_address_ipv4 }}"
        creates: /usr/local/bin/k3s
      become: true

    - name: Make sure the K3s server service is running
      ansible.builtin.service:
        name: k3s
        state: started
        enabled: true
      become: true

- name: Provision the other server nodes
  when: not nausicaea.k3s.args.cluster_init
  block:
    - name: Create the server directory
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server
        state: directory
        recurse: true
        owner: root
        group: root
        mode: "u=rwX,go="
      become: true

    - name: Copy the K3s token file
      ansible.builtin.copy:
        src: k3s-token
        dest: /var/lib/rancher/k3s/server/token
        owner: root
        group: root
        mode: "0600"
      become: true

    - name: Wait for the cluster to be available
      ansible.builtin.uri:
        url: "{{ nausicaea.k3s.args.api_url }}"
        validate_certs: false
        status_code: [200, 401]
        method: GET
        follow_redirects: none
        timeout: 5
      register: k8s_apiserver
      retries: 12
      delay: 5

    - name: Run the K3s installer for a server (control pane)
      ansible.builtin.command:
        argv:
          - /usr/local/sbin/k3s-install
          - server
          - "--server"
          - "{{ nausicaea.k3s.args.api_url }}"
          - "--token-file"
          - "/var/lib/rancher/k3s/server/token"
          - "--tls-san"
          - "{{ k3s_tls_san }}"
          - "--advertise-address"
          - "{{ k3s_advertise_address_ipv4 }}"
        creates: /usr/local/bin/k3s
      become: true

    - name: Make sure the K3s server service is running
      ansible.builtin.service:
        name: k3s
        state: started
        enabled: true
      become: true
