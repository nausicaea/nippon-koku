---
- name: Install the Kubernetes helper package
  ansible.builtin.package:
    name: python3-kubernetes
    state: present
  become: true

- name: Configure firewalld
  ansible.builtin.import_tasks:
    file: configure_firewalld.yml

- name: Download the K3s installer script
  ansible.builtin.get_url:
    url: https://get.k3s.io
    checksum: sha256:9d5fc42bf825d3e8dcc8682c8bac071b1de18019af81f85519ccbe5c919e0896
    dest: /usr/local/sbin/k3s-install
    owner: root
    group: root
    mode: "0500"
  become: true

- name: Determine the network parameters
  ansible.builtin.set_fact:
    k3s_tls_san: "{{ [tailscale_host_fqdn, tailscale_address_ipv4, tailscale_address_ipv6] | join(',') }}"

- name: Provision the cluster-init node
  when: nausicaea.k3s.args.cluster_init
  block:
    - name: Create the logical volume for the K3s server data
      community.general.lvol:
        vg: "{{ lvm_first_vg }}"
        lv: "{{ nausicaea.k3s.vars.server_lv_name }}"
        size: "{{ nausicaea.k3s.server_lv_min_size }}"
        shrink: false
        resizefs: true
        state: present
      become: true

    - name: Create an ext4 filesystem for the K3s server data volume
      community.general.filesystem:
        src: "/dev/{{ lvm_first_vg }}/{{ nausicaea.k3s.vars.server_lv_name }}"
        fstype: ext4
        resizefs: true
        state: present
      become: true

    - name: Create the server directory
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server
        state: directory
        recurse: true
        owner: root
        group: root
        mode: "u=rwX,go="
      become: true

    - name: Mount the K3s server data volume
      ansible.posix.mount:
        path: /var/lib/rancher/k3s/server
        src: "/dev/{{ lvm_first_vg }}/{{ nausicaea.k3s.vars.server_lv_name }}"
        state: mounted
      become: true

    - name: Create the TLS directory
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server/tls
        state: directory
        recurse: true
        owner: root
        group: root
        mode: "u=rwX,go="
      become: true

    - name: Extract the custom TLS certificates
      ansible.builtin.unarchive:
        src: k3s-server-tls.tgz
        dest: /var/lib/rancher/k3s/server/tls
        creates: /var/lib/rancher/k3s/server/tls/root-ca.crt
        owner: root
        group: root
        mode: "u=rwX,go="
      become: true

    - name: Copy the K3s token file
      ansible.builtin.copy:
        src: k3s-token
        dest: /var/lib/rancher/k3s/server/token
        owner: root
        group: root
        mode: "0600"
      become: true

    - name: Run the K3s installer with cluster-init for a server (control pane)
      ansible.builtin.command:
        argv:
          - /usr/local/sbin/k3s-install
          - server
          - "--cluster-init"
          - "--token-file=/var/lib/rancher/k3s/server/token"
          - "--tls-san={{ k3s_tls_san }}"
          - "--etcd-s3"
          - "--etcd-s3-config-secret=k3s-etcd-snapshot-s3-config"
        creates: /usr/local/bin/k3s
      become: true

    - name: Make sure the K3s server service is running
      ansible.builtin.service:
        name: k3s
        state: started
        enabled: true
      become: true

    - name: Create the Kubeconfig directory
      ansible.builtin.file:
        path: "{{ nausicaea.common.ansible_home }}/.kube"
        state: directory
        owner: "{{ nausicaea.common.ansible_user }}"
        group: "{{ nausicaea.common.ansible_group }}"
        mode: "0700"
      become: true

    - name: Copy the K3s kubeconfig to the Ansible user
      ansible.builtin.copy:
        remote_src: true
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ nausicaea.common.ansible_home }}/.kube/config"
        owner: "{{ nausicaea.common.ansible_user }}"
        group: "{{ nausicaea.common.ansible_group }}"
        mode: "0600"
      become: true

    - name: Wait for the node to be ready
      kubernetes.core.k8s_info:
        kubeconfig: "{{ nausicaea.common.ansible_home }}/.kube/config"
        kind: Node
        name: "{{ tailscale_host_fqdn }}"
        label_selectors:
          - node-role.kubernetes.io/control-plane=true
          - node-role.kubernetes.io/etcd=true
          - node-role.kubernetes.io/master=true
        wait: true
        wait_condition:
          type: Ready
          status: "True"

- name: Provision the other server nodes
  when: not nausicaea.k3s.args.cluster_init
  block:
    - name: Create the logical volume for the K3s server data
      community.general.lvol:
        vg: "{{ lvm_first_vg }}"
        lv: "{{ nausicaea.k3s.vars.server_lv_name }}"
        size: "{{ nausicaea.k3s.server_lv_min_size }}"
        shrink: false
        resizefs: true
        state: present
      become: true

    - name: Create an ext4 filesystem for the K3s server data volume
      community.general.filesystem:
        src: "/dev/{{ lvm_first_vg }}/{{ nausicaea.k3s.vars.server_lv_name }}"
        fstype: ext4
        resizefs: true
        state: present
      become: true

    - name: Create the server directory
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/server
        state: directory
        recurse: true
        owner: root
        group: root
        mode: "u=rwX,go="
      become: true

    - name: Mount the K3s server data volume
      ansible.posix.mount:
        path: /var/lib/rancher/k3s/server
        src: "/dev/{{ lvm_first_vg }}/{{ nausicaea.k3s.vars.server_lv_name }}"
        state: mounted
      become: true

    - name: Copy the K3s token file
      ansible.builtin.copy:
        src: k3s-token
        dest: /var/lib/rancher/k3s/server/token
        owner: root
        group: root
        mode: "0600"
      become: true

    - name: Wait for the cluster to be available
      ansible.builtin.uri:
        url: "{{ nausicaea.k3s.args.api_url }}"
        validate_certs: false
        status_code: [200, 401]
        method: GET
        follow_redirects: none
        timeout: 5
      register: k8s_apiserver
      retries: 12
      delay: 5

    - name: Run the K3s installer for a server (control pane)
      ansible.builtin.command:
        argv:
          - /usr/local/sbin/k3s-install
          - server
          - "--server={{ nausicaea.k3s.args.api_url }}"
          - "--token-file=/var/lib/rancher/k3s/server/token"
          - "--tls-san={{ k3s_tls_san }}"
          - "--etcd-s3"
          - "--etcd-s3-config-secret=k3s-etcd-snapshot-s3-config"
        creates: /usr/local/bin/k3s
      become: true

    - name: Make sure the K3s server service is running
      ansible.builtin.service:
        name: k3s
        state: started
        enabled: true
      become: true

    - name: Create the Kubeconfig directory
      ansible.builtin.file:
        path: "{{ nausicaea.common.ansible_home }}/.kube"
        state: directory
        owner: "{{ nausicaea.common.ansible_user }}"
        group: "{{ nausicaea.common.ansible_group }}"
        mode: "0700"
      become: true

    - name: Copy the K3s kubeconfig to the Ansible user
      ansible.builtin.copy:
        remote_src: true
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ nausicaea.common.ansible_home }}/.kube/config"
        owner: "{{ nausicaea.common.ansible_user }}"
        group: "{{ nausicaea.common.ansible_group }}"
        mode: "0600"
      become: true

    - name: Wait for the node to be ready
      kubernetes.core.k8s_info:
        kubeconfig: "{{ nausicaea.common.ansible_home }}/.kube/config"
        kind: Node
        name: "{{ tailscale_host_fqdn }}"
        label_selectors:
          - node-role.kubernetes.io/control-plane=true
          - node-role.kubernetes.io/etcd=true
          - node-role.kubernetes.io/master=true
        wait: true
        wait_condition:
          type: Ready
          status: "True"
